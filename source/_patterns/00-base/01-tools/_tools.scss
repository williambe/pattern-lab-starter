/* ==========================================================================
Tools (mixins, functions, helpers)
Partial files needed when category include more than four mixin/function 

TOC
- clearfix
- accessibility (partial file)
- units
- media-query
- center (partial file)
- sizing
- spacing
- typography (partial file)
- link
- buttons
- image-replace
- svg-background
========================================================================== */

/* ==========================================================================
clearfix
from drupal/gesso
========================================================================== */

@mixin clearfix {
  &::after {
    clear: both;
    content: '';
    display: table;
  }
}

@mixin clearfix-important {
  &::after {
    clear: both !important;
    content: '' !important;
    display: table !important;
  }
}

/* ==========================================================================
accessibility (partial file)
========================================================================== */
/* ==========================================================================
units (conversion)
========================================================================== */
// Function â€“ strip-unit
// Strip unit function. Get unitless value.
// from: http://hugogiraudel.com/2013/08/12/sass-functions/
@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

// Convert pixel values to em.
@function em($px, $base: $base-font-size) {
  @return ($px / $base) * 1em;
}

// Convert pixel values to rem.
@function rem($px, $base: $base-font-size) {
  @return ($px / $base) * 1rem;
}
/* ==========================================================================
typography (partial file)
========================================================================== */
/* ==========================================================================
link Set Link Colors & Decoration
from phase2/pattern-lab-starter 
========================================================================== */
// Mixin - Set Link Colors & Decoration
// @param $link
// @param $hover
// @param $deco
// @param $deco--hover
@mixin a-link($link: $c-text-link, $hover: $c-text-link-hover, $deco: none, $deco--hover: underline) {
  &:link,
  &:visited {
    color: $link;
    text-decoration: $deco;
  }
  &:hover,
  &:focus,
  &:active {
    color: $hover;
    text-decoration: $deco--hover;
  }
}
/* ==========================================================================
buttons
from phase2/pattern-lab-starter 
========================================================================== */
@mixin button($alt: false) {
  @include a-link($link: $c-white, $hover: $c-white, $deco--hover: "none");
  background-color: $c-background-accent;
  border-radius: none;
  font-family: $ff-base;
  font-weight: $fw-bold;
  padding: ($sp-third * 3) ($sp-base * 3);
  display: inline-block;
  text-decoration: none;
  text-align: center;
  @if $alt {
    background: $c-background-light;
    color: $c-accent;
  }
}
/* ==========================================================================
buttons2
from forumone/gesso/
========================================================================== */

@mixin button2($bg: $c-button-primary, $text: $c-button-primary-text, $font-size: $fs-base, $line-height: $lh-base, $border-radius: 0, $circular: false, $shadow: false, $border: false) {
  background: $bg;
  border-radius: $border-radius;
  color: $text;
  cursor: pointer;
  display: inline-block;
  position: relative;
  font-family: $fu-ui;
  font-size: $font-size;
  font-weight: $fw-bold;
  line-height: $line-height;
  margin: 0;
  padding:  ($sp-third) ($sp-base); //0.125em 1.25em;
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
  transition: background-color 250ms; // $f1-ease-smooth;
  vertical-align: baseline;
  border: 0;

  @if $circular == true {
    display: block;
    line-height: $line-height;
    height: $line-height;
    width: $line-height;
    border-radius: 50%;
  }

  @if $shadow == true {
    box-shadow: rgba(0, 0, 0, 0.2), 0 1px 2px;
  }

  @if $border == true {
    border: 2px solid $white;
  }

  @if support-legacy-browser('ie', '6', '7') {
    *line-height: normal;
    *zoom: 1;
  }

  &:focus,
  &:hover {
    background-color: darken($bg, 15%);
    border-color: darken($bg, 50%);
    color: $text;
    outline: 0;
  }

  &:active {
    background-color: darken($bg, 15%);
    border-color: darken($bg, 30%);
  }
}


/* ==========================================================================
image-replace
from drupal/gesso
========================================================================== */
// After applying mixin, inline elements will need the display property set to
// block or inline-block.
@mixin image-replace($width, $height) {
  height: $height;
  overflow: hidden;
  width: $width;

  &::before {
    content: '';
    display: block;
    height: 150%;
    width: 0;
  }
}

// This image replacement approach works with <input> and <button> elements.
// The font-size declaration may cause problems for SEO and browsers with a
// minimum font-size setting. Other inherited styles might also cause problems.
@mixin image-replace-alt($width, $height) {
  color: transparent;
  font: 0/0 a;
  height: $height;
  text-shadow: none;
  width: $width;
}
/* ==========================================================================
svg-background TO BE TESTED
from drupal/gesso 
========================================================================== */
// Inline SVG background image with a PNG fallback
// Fallback based on: http://pauginer.tumblr.com/post/36614680636/invisible-gradient-technique

@mixin svg-background($image-name, $image-location: '/images/icons/src/') {
  background-image: url($image-location + $image-name + '.png');
  background-image: linear-gradient(transparent, transparent), url($image-location + $image-name + '.svg');
}

@mixin svgz-background($image-name, $image-location: '../images/bg/') {
  background-image: url($image-location + $image-name + '.png');
  background-image: linear-gradient(transparent, transparent), url($image-location + $image-name + '.svgz');
}

@mixin svg-background-inline($image-name, $image-location: '../images/bg/') {
  background-image: url($image-location + $image-name + '.png');
  background-image: linear-gradient(transparent, transparent), inline($image-location + $image-name + '.svg');
}

@mixin svgz-background-inline($image-name, $image-location: '../images/bg/') {
  background-image: url($image-location + $image-name + '.png');
  background-image: linear-gradient(transparent, transparent), inline($image-location + $image-name + '.svgz');
}
